// Example 1: List authors page by page, 25 at a time
// Controller code
<cfparam name="params.page" default="1">
allAuthors = model("author").findAll(page=params.page, perPage=25, order="lastName")>

// View code
<ul>
    <cfoutput query="allAuthors">
        <li>##firstName## ##lastName##</li>
    </cfoutput>
</ul>
<cfoutput>##paginationLinks(action="listAuthors")##</cfoutput>

// Example 2: Using the same model call above, show all authors with a window size of 5
// View code
<cfoutput>##paginationLinks(action="listAuthors", windowSize=5)##</cfoutput>

// Example 3: If more than one paginated query is being run, then you need to reference the correct `handle` in the view
// Controller code
allAuthors = model("author").findAll(handle="authQuery", page=5, order="id")>

// View code
<ul>
    <cfoutput>##paginationLinks(action="listAuthors", handle="authQuery", prependToLink="<li>", appendToLink="</li>")##</cfoutput>
</ul>

// Example 4: Call to `paginationLinks` using routes
// Route setup in config/routes.cfm
addRoute(name="paginatedCommentListing", pattern="blog/[year]/[month]/[day]/[page]", controller="theBlog", action="stats")>
addRoute(name="commentListing", pattern="blog/[year]/[month]/[day]",  controller="theBlog", action="stats")>

// Ccontroller code
<cfparam name="params.page" default="1">
comments = model("comment").findAll(page=params.page, order="createdAt")>

// View code
<ul>
    <cfoutput>##paginationLinks(route="paginatedCommentListing", year=2009, month="feb", day=10)##</cfoutput>
</ul>